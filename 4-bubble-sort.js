// принцип - мы в 2йном цикле пробегаемся по всему массиву и сравниваем по парно лежащие элементы, если следующий элемент массива меньше чем предыдущий, мы меняем их местами, и получается своего рода всплытие, те самый большой элемент с каждой итерацией потихоньку всплывает на верх - пузырьковая сортировка самый известный и неэффективный
// Создаем два цикла которые будут пробегатся по всей длинне массива как внешней так и внутренней

const arr = [
  0, 3, 2, 5, 6, 8, 1, 9, 4, 2, 1, 2, 9, 6, 4, 1, 7, -1, -5, 23, 6, 2, 35, 6, 3,
  32,
];

let count = 0;

function bubbleSort(array) {
  for (let i = 0; i < array.length; i++) {
    for (let j = 0; j < array.length; j++) {
      if (array[j + 1] < array[j]) {
        let tmp = array[j];
        array[j] = array[j + 1];
        array[j + 1] = tmp;
      }
      count += 1;
    }
  }
  return arr;
}

console.log('length', arr.length); // 26
console.log(bubbleSort(arr));
// [
//    0,  2,  3, 1, 4, 1, 2,  2,
//    1, -5, -1, 2, 3, 4, 5,  6,
//    6,  6,  6, 7, 8, 9, 9, 23,
//   32, 35
// ]
console.log('count = ', count); // 676

// сложность o(n*n) - о от n в квадрате
